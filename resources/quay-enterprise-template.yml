apiVersion: v1
kind: Template
metadata:
  name: quay-enterprise-template
  annotations:
    description: "Quay on OpenShift"
    iconClass: "pficon-registry"
    tags: "quay,registry"
objects:
- apiVersion: v1
  kind: Namespace
  metadata:
    name: "${QUAY_NAMESPACE}"
- apiVersion: v1
  kind: Secret
  metadata:
    namespace: "${QUAY_NAMESPACE}"
    name: quay-enterprise-config-secret
- apiVersion: v1
  kind: Secret
  metadata:
    namespace: "${QUAY_NAMESPACE}"
    name: coreos-pull-secret
  type: kubernetes.io/dockerconfigjson
  stringData:
    .dockerconfigjson: |
      {
        "auths": {
          "quay.io": {
            "auth": ${AUTH_KEY},
            "email": ""
          }
        }
      } 
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: quay
    namespace: "${QUAY_NAMESPACE}"
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    namespace: "${QUAY_NAMESPACE}"
    name: quay-enterprise-redis
    labels:
      quay-enterprise-component: redis
  spec:
    replicas: 1
    selector:
      matchLabels:  
        quay-enterprise-component: redis
    template:
      metadata:
        namespace: "${QUAY_NAMESPACE}"
        labels:
          quay-enterprise-component: redis
      spec:
        serviceAccountName: quay
        containers:
        - name: redis-master
          image: registry.access.redhat.com/rhscl/redis-32-rhel7
          ports:
          - containerPort: 6379
          securityContext:   # Requires that you run: `oc adm policy add-scc-to-user privileged system:serviceaccount:quay-enterprise:quay`
          # https://trello.com/c/AESKXB60/101-templating-enable-modifying-user-permissions would allow us to bindings into the template, and not run the command (above).
            privileged: true
            runAsUser: 0
- apiVersion: v1
  kind: Service
  metadata:
    namespace: "${QUAY_NAMESPACE}"
    name: quay-enterprise-redis
    labels:
      quay-enterprise-component: redis
  spec:
    ports:
      - port: 6379
    selector:
      quay-enterprise-component: redis
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    namespace: "${QUAY_NAMESPACE}"
    name: quay-enterprise-app
    labels:
      quay-enterprise-component: app
  spec:
    replicas: 1
    selector:
      matchLabels:
        quay-enterprise-component: app
    template:
      metadata:
        namespace: "${QUAY_NAMESPACE}"
        labels:
          quay-enterprise-component: app
      spec:
        volumes:
          - name: configvolume
            secret:
              secretName: quay-enterprise-config-secret
        containers:
        - name: quay-enterprise-app
          image: quay.io/coreos/quay:v2.9.1
          ports:
          - containerPort: 80
          volumeMounts:
          - name: configvolume
            readOnly: false
            mountPath: /conf/stack
        imagePullSecrets:
          - name: coreos-pull-secret
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: Role
  metadata:  
    name: quay-enterprise-serviceaccount
    namespace: "${QUAY_NAMESPACE}"
  rules:
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - get
    - put
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: RoleBinding
  metadata:
    name: quay-enterprise-secret-writer
    namespace: "${QUAY_NAMESPACE}"
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: quay-enterprise-serviceaccount
  subjects:
  - kind: ServiceAccount
    name: default
parameters:
  - name: QUAY_NAMESPACE
    displayName: Quay Registry Namespace
    description: Define a custom Quay Registry Namespace
    value: quay-enterprise
    required: true 
  - name: AUTH_KEY
    displayName: CoreOS Authentication Key
    description: The auth key from your config.json file 
    required: true 
